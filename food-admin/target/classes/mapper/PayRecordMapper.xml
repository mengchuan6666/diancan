<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qnbc.venueReservation.mapper.PayRecordMapper">

    <resultMap type="com.qnbc.venueReservation.domain.PayRecord" id="PayRecordResult">
        <result property="id"    column="id"    />
        <result property="userId"    column="user_id"    />
        <result property="userName"    column="user_name"    />
        <result property="money"    column="money"    />
        <result property="payType"    column="pay_type"    />
        <result property="deleted"    column="deleted"    />
        <result property="revision"    column="revision"    />
        <result property="createdBy"    column="created_by"    />
        <result property="createdTime"    column="created_time"    />
        <result property="updatedBy"    column="updated_by"    />
        <result property="updatedTime"    column="updated_time"    />
    </resultMap>

    <sql id="selectPayRecordVo">
        select id, user_id, user_name, money, pay_type, deleted, revision, created_by, created_time, updated_by, updated_time from pay_record
    </sql>

    <select id="selectPayRecordList" parameterType="com.qnbc.venueReservation.domain.PayRecord" resultMap="PayRecordResult">
        <include refid="selectPayRecordVo"/>
        <where>
            <if test="userId != null  and userId != ''"> and user_id = #{userId}</if>
            <if test="userName != null  and userName != ''"> and user_name like concat('%', #{userName}, '%')</if>
            <if test="money != null  and money != ''"> and money = #{money}</if>
            <if test="payType != null  and payType != ''"> and pay_type = #{payType}</if>
            <if test="deleted != null "> and deleted = #{deleted}</if>
            <if test="revision != null "> and revision = #{revision}</if>
            <if test="createdBy != null  and createdBy != ''"> and created_by = #{createdBy}</if>
            <if test="createdTime != null "> and created_time = #{createdTime}</if>
            <if test="updatedBy != null  and updatedBy != ''"> and updated_by = #{updatedBy}</if>
            <if test="updatedTime != null "> and updated_time = #{updatedTime}</if>
        </where>
    </select>

    <select id="selectPayRecordById" parameterType="Long" resultMap="PayRecordResult">
        <include refid="selectPayRecordVo"/>
        where id = #{id}
    </select>

    <insert id="insertPayRecord" parameterType="com.qnbc.venueReservation.domain.PayRecord">
        insert into pay_record
        <trim prefix="(" suffix=")" suffixOverrides=",">

            <if test="userId != null">user_id,</if>
            <if test="userName != null">user_name,</if>
            <if test="money != null">money,</if>
            <if test="payType != null">pay_type,</if>
            <if test="deleted != null">deleted,</if>
            <if test="revision != null">revision,</if>
            <if test="createdBy != null">created_by,</if>
            <if test="createdTime != null">created_time,</if>
            <if test="updatedBy != null">updated_by,</if>
            <if test="updatedTime != null">updated_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">#{userId},</if>
            <if test="userName != null">#{userName},</if>
            <if test="money != null">#{money},</if>
            <if test="payType != null">#{payType},</if>
            <if test="deleted != null">#{deleted},</if>
            <if test="revision != null">#{revision},</if>
            <if test="createdBy != null">#{createdBy},</if>
            <if test="createdTime != null">#{createdTime},</if>
            <if test="updatedBy != null">#{updatedBy},</if>
            <if test="updatedTime != null">#{updatedTime},</if>
         </trim>
    </insert>

    <update id="updatePayRecord" parameterType="com.qnbc.venueReservation.domain.PayRecord">
        update pay_record
        <trim prefix="SET" suffixOverrides=",">
            <if test="userId != null">user_id = #{userId},</if>
            <if test="userName != null">user_name = #{userName},</if>
            <if test="money != null">money = #{money},</if>
            <if test="payType != null">pay_type = #{payType},</if>
            <if test="deleted != null">deleted = #{deleted},</if>
            <if test="revision != null">revision = #{revision},</if>
            <if test="createdBy != null">created_by = #{createdBy},</if>
            <if test="createdTime != null">created_time = #{createdTime},</if>
            <if test="updatedBy != null">updated_by = #{updatedBy},</if>
            <if test="updatedTime != null">updated_time = #{updatedTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deletePayRecordById" parameterType="Long">
        delete from pay_record where id = #{id}
    </delete>

    <delete id="deletePayRecordByIds" parameterType="String">
        delete from pay_record where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>
